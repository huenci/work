<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiabiango.hr.mapper.UserRoleMapper">
	<resultMap id="BaseResultMap" type="com.jiabiango.hr.model.UserRole">
	    <result column="id" jdbcType="INTEGER" property="id" />
	    <result column="user_id" jdbcType="INTEGER" property="userId" />
	    <result column="role_id" jdbcType="INTEGER" property="roleId" />
	    <result column="status" jdbcType="VARCHAR" property="status" />
	    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
	    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
	    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	</resultMap>
	
	<sql id="Base_Column_List">
	    id, user_id, role_id, status, create_by, create_time, update_by, update_time
	</sql>

	<insert id="insert">
		insert into jbg_user_role (user_id,
		role_id,status, create_by, create_time,
		update_by, update_time)
		values(
			#{userId,jdbcType=INTEGER},#{roleId,jdbcType=INTEGER},
			#{status,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
			#{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	
	<select id="selectRoleByUserId" resultMap="com.jiabiango.hr.mapper.RoleMapper.BaseResultMap">
	    select 
	    r.id, r.name
	    from jbg_user u 
	    left join jbg_user_role ur on u.id = ur.user_id
	    left join jbg_role r on r.id = ur.role_id
	    where u.id = #{userId,jdbcType=INTEGER}
	    and u.status = '1'
	    and ur.status = '1'
	    and r.status = '1'
	 </select>
	
	<update id="updateUserRole">
		update jbg_user_role set status = #{status},update_time = #{updateTime}, update_by=#{updateBy}
		where user_id = #{userId} and role_id = #{roleId}
	</update>

	<select id="selectRoleAuthorities" resultType="string">
	    select 
	    DISTINCT res.authority
	    from jbg_user u 
	    left join jbg_user_role ur on u.id = ur.user_id
	    left join jbg_role r on r.id = ur.role_id
	    left join jbg_role_resource rr on r.id = rr.role_id
	    left join jbg_resource res on res.id = rr.resource_id
	    where u.id = #{userId,jdbcType=INTEGER}
	    and u.status = '1'
	    and ur.status = '1'
	    and r.status = '1'
	    and rr.status = '1'
	    and res.status = '1'
	    and res.type not in('menu','menu_group')
	 </select>
	 
	 <select id="selectRoleClientIds" resultType="string">
	    select 
	    DISTINCT res.client_id
	    from jbg_user u 
	    left join jbg_user_role ur on u.id = ur.user_id
	    left join jbg_role r on r.id = ur.role_id
	    left join jbg_role_resource rr on r.id = rr.role_id
	    left join jbg_resource res on res.id = rr.resource_id
	    where u.id = #{userId,jdbcType=INTEGER}
	    and u.status = '1'
	    and ur.status = '1'
	    and r.status = '1'
	    and rr.status = '1'
	    and res.status = '1'
	 </select>
	 
	 <select id="selectRoleMenu" resultMap="com.jiabiango.hr.mapper.ResourceMapper.BaseResultMap">
	    select 
	    DISTINCT res.*
	    from jbg_user u 
	    left join jbg_user_role ur on u.id = ur.user_id
	    left join jbg_role r on r.id = ur.role_id
	    left join jbg_role_resource rr on r.id = rr.role_id
	    left join jbg_resource res on res.id = rr.resource_id
	    where u.id = #{userId,jdbcType=INTEGER}
	    and u.status = '1'
	    and ur.status = '1'
	    and r.status = '1'
	    and rr.status = '1'
	    and res.status = '1'
	    and res.type in('menu','menu_group')
	    order by res.sort asc
	 </select>
	 
	 <select id="selectByUserIdAndRole" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/>
		from jbg_user_role
		where user_id = #{userId}
		and role_id = #{roleId}
		and status = '1'
	</select>
</mapper>